generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  walletAddress String        @id @unique
  email         String        @unique
  name          String?
  createdAt     DateTime      @default(now())
}

model Contract {
  id                String         @id @default(cuid())
  title             String
  description       String?
  content           String?
  status            ContractStatus @default(DRAFT)
  ownerGoogleIdHash String         // Hashed Google ID for privacy
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  expiresAt         DateTime?
  metadata          Json?
  allowlistId       String?
  authorizedUsers   String[]
  documentId        String?
  encryptionInfo    Json?
  networkInfo       String?
  walrusBlobId      String?
  startDate         DateTime?
  endDate           DateTime?
  
  // AWS S3 fields
  s3FileKey       String?        // S3 object key
  s3Bucket        String?        // S3 bucket name
  s3FileName      String?        // Original filename
  s3FileSize      Int?           // File size in bytes
  s3ContentType   String?        // MIME type
  s3UploadedAt    DateTime?      // Upload timestamp
  
  // Encryption fields
  sealAllowlistId   String?
  sealDocumentId    String?
  sealCapId         String?
  isEncrypted       Boolean @default(false)
  originalFileName  String?
  
  signatures      Signature[]
}

model Signature {
  id                String          @id @default(cuid())
  contractId        String
  userGoogleIdHash  String          // Hashed Google ID for privacy
  signedAt          DateTime?
  status            SignatureStatus @default(PENDING)
  walletAddress     String
  signature         String?         // Base64 signature image
  zkLoginData       Json?           // zkLogin signature data
  email             String?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  contract          Contract        @relation(fields: [contractId], references: [id])
}

enum ContractStatus {
  DRAFT
  PENDING
  ACTIVE
  COMPLETED
  EXPIRED
  CANCELLED
}

enum SignatureStatus {
  PENDING
  SIGNED
  REJECTED
  EXPIRED
}
