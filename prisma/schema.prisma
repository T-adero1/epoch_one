generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email         String   @unique
  walletAddress String   @id @unique
  name          String?
  createdAt     DateTime @default(now())
}

model Contract {
  id                 String         @id @default(cuid())
  title              String
  description        String?
  content            String?
  status             ContractStatus @default(DRAFT)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  expiresAt          DateTime?
  metadata           Json?
  authorizedUsers    String[]
  documentId         String?
  encryptionInfo     Json?
  endDate            DateTime?
  networkInfo        String?
  startDate          DateTime?
  walrusBlobId       String?
  s3Bucket           String?
  s3ContentType      String?
  s3FileKey          String?
  s3FileName         String?
  s3FileSize         Int?
  s3UploadedAt       DateTime?
  isEncrypted        Boolean        @default(false)
  originalFileName   String?
  sealAllowlistId    String?
  sealCapId          String?
  sealDocumentId     String?
  ownerGoogleIdHash  String
  signaturePositions Json?
  signatures         Signature[]
}

model Signature {
  id               String          @id @default(cuid())
  contractId       String
  signedAt         DateTime?
  status           SignatureStatus @default(PENDING)
  walletAddress    String
  signature        String?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  email            String?
  zkLoginData      Json?
  userGoogleIdHash String
  contract         Contract        @relation(fields: [contractId], references: [id])
}

enum ContractStatus {
  DRAFT
  PENDING
  ACTIVE
  COMPLETED
  EXPIRED
  CANCELLED
}

enum SignatureStatus {
  PENDING
  SIGNED
  REJECTED
  EXPIRED
}
